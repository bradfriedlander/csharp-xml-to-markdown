<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XmlToMarkdown</name>
    </assembly>
    <members>
        <member name="T:XmlToMarkdown.Program">
            <summary>This calss contains the main entry point for the application.</summary>
        </member>
        <member name="M:XmlToMarkdown.Program.Main(System.String[])">
            <summary>Defines the entry point of the application.</summary>
            <param name="args">These are the arguments for the program.</param>
            <remarks>
            <para>Usage: XmlToMarkdown {inputPathname} {outputPathname}</para>
            </remarks>
        </member>
        <member name="T:XmlToMarkdown.XmlToMarkdown">
            <summary>This class supports the conversion of C# generated document to Markdown.</summary>
        </member>
        <member name="F:XmlToMarkdown.XmlToMarkdown.getNodeData">
            <summary>This method gets node data.</summary>
        </member>
        <member name="F:XmlToMarkdown.XmlToMarkdown.getCrefData">
            <summary>
            <para>This method gets node data for an internal page anchor.</para>
            </summary>
        </member>
        <member name="F:XmlToMarkdown.XmlToMarkdown.getLowercaseRefData">
            <summary>
            <para>This method gets node data for and external reference.</para>
            </summary>
        </member>
        <member name="M:XmlToMarkdown.XmlToMarkdown.ToMarkDown(System.Xml.Linq.XNode)">
            <summary>This method converts the current C# documentation node to markdown.</summary>
            <param name="thisNode">This is a C# documentation node.</param>
            <returns>This is a string containing the Markdown content.</returns>
        </member>
        <member name="M:XmlToMarkdown.XmlToMarkdown.ToMarkDown(System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode})">
            <summary>This method converts a set of C# documentation nodes to markdown content.</summary>
            <param name="es">This is the set of C# documentation nodes.</param>
            <returns>This is the Markdown content.</returns>
        </member>
        <member name="M:XmlToMarkdown.XmlToMarkdown.BuildMethods">
            <summary>This method builds a dictionary of markdown generation methods.</summary>
            <returns>This is the dictionary of markdown generation methods.</returns>
        </member>
        <member name="M:XmlToMarkdown.XmlToMarkdown.BuildTemplates">
            <summary>This method builds the template dictionary.</summary>
            <returns>This is the template dictionary.</returns>
        </member>
        <member name="M:XmlToMarkdown.XmlToMarkdown.IsNamespaceDocElement(System.Xml.Linq.XElement)">
            <summary>
                This method determines if the specified element is a NamespaceDoc class.
            </summary>
            <param name="elementToCheck">This is the element to check.</param>
            <returns><c>true</c> if the specified element is a NamespaceDoc class; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:XmlToMarkdown.XmlToMarkdown.ToCodeBlock(System.String)">
            <summary>This method converts an "example" documentation block into a Markdown code block.</summary>
            <param name="exampleContent">This is the string containing the example code.</param>
            <example>
            var codeBlockText = exampleContent.ToCodeBlock();
            </example>
            <returns>This is formatted code block.</returns>
        </member>
    </members>
</doc>
